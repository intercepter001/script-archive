#/bin/bash
{

#echo >> ~/.debug1 
#exec >> ~/.debug1 2>&1
#set -x

# intercept lpr (not lp for now)
# - REROUTEALL has been set
# - crippled apps that we use often for printing are being used (e.g. firefox3 and bogus gnome printing dialog)
# - evince issue: cannot detect printing by evince
#      parent is INIT, session is gnome, nothing in ENV
#      so with default printing, things go to ~/PDF unchanged, sigh

# try running a resource-friendly cgroup (doesn't catch cupsd pdftopdf :/)
cgroup=""; which wrapcgroup >/dev/null 2>&1 &&   cgroup='wrapcgroup -low'
# try supplying a osd notification to avoid surprises
# however note that osd.print uses the head with the mouse.
# worse, it doesn't trunc the osd location to the physically
# visible display of the display head in question
osdprint=""; which osd.print >/dev/null 2>&1 && osdprint='osd.print LPRWRAPPER'

function pass {
   if [ "$1" != "" ]; then
      echo "pass thru - possibly check ~/PDF: $1" 1>&2 
      [ "$osdprint" != "" ] && $osdprint "$1" &
      (echo; echo "! $1") >> $HOME/.lpr.debug
   fi
   shift
   $cgroup /usr/bin/lpr "$@"
   rc=$?
}

function nup { # ignore all options given to us and use mypsnup instead
   if [ "$1" != "" ]; then
      (echo; echo "! $1") >> $HOME/.lpr.debug
      # encomment the next line to reduce osd noise?
      [ "$osdprint" != "" ] && $osdprint "$1" &
   fi 
   opt=${MYPSNUPREROUTEOPT:--2}
   # avoid looping
   export MYPSNUPSKIPREROUTEALL=1
   ADDON_PATH=""
   unset MOZ_LAUNCHED_CHILD
   unset MYPSNUPREROUTEALL
   # enter your customized print command below
   # maybe pop a requester if DISPLAY seems to work to allow modifications?
   $cgroup mypsnup $opt >> $HOME/.lpr.debug 2>&1
   rc=$?
}



mv $HOME/.lpr.debug $HOME/.lpr.debug.old 2>/dev/null
{ date; echo $$; printf "lpr %s\n" "$*"; echo; declare -p|cat -vt; echo; ps -ewwo "user,pid,ppid,pgid,nice,pri,vsize:7,rssize:7,tty:6,start,pcpu,pmem,time,cmd"; echo; } > $HOME/.lpr.debug
rc=0



while true; do
   if [ "$MYSPNUPSKIPREROUTEALL" != "" ];
   then
      pass "pass thru due to recursion" "$@"; break
   fi

   if echo " $* " | egrep -e ' -P ?PDF ' >/dev/null; then
      pass "printing to ~/PDF(?) - pass thru" "$@"; break
   fi

   if test -f $HOME/.mypsnuprerouteall && [ "$MYSPNUPSKIPREROUTEALL" = "" ];
   then
      nup "global rerouting to mypsnup" "$@"; break
   fi

   if echo "$ADDON_PATH" | grep -i firefox >/dev/null || 
      declare -p | grep -e MOZ_LAUNCHED_CHILD -e 'MYPSNUPREROUTEALL' >/dev/null;
   then
      nup "firefox rerouting to mypsnup" "$@"; break
   fi
   
   # N1 have us always run nup when lpr is invoked w/o options?
   
   # N2 evince e.g. doesn't set any var or pgid of its own
   #    and thus we cannot detect it with less than say lsof...

   # N3 the default printer is probably the PDF printer !
   
   if echo " $* " | egrep -e ' -P' -e ' -d' >/dev/null; then
      pass "unknown source - pass thru (w queue? maybe evince?)" "$@"; break
   else
      pass "unknown source - pass thru (w/o queue, maybe evince?) " "$@"; break
   fi
done



exit $rc; }



# MOZILLA CUM GNOME IDIOCY PRINTING WORKAROUND
# (requires dir containing this lpr hack to be in $PATH before /usr/bin)

# consider adding a pop up option 

#d=$HOME/.IDIOTIC-GTK-PRINTING-YEAR-FOR-YEAR
#> $d
#ps -ef | grep $LOGNAME >> $d
#set                    >> $d
#echo $$                >> $d
# BUG0 echo 'gtk-print-backends = "lpr,file,cups"' > /etc/gtk2.0/gtkrc
# BUG1 gtk printing as only option to print in firefox 3
# BUG2 without workarounds, storing previous printing options et al
# BUG3 ppid is 1
# BUG4 caller is not firefox
# BUG5 only option determining caller: 
#   a) pts/N or 
#   b) ADDON_PATH, LIBPRATH
# BUG6 is this idiotic workaround indeed assumed to be a 
#      modern superior way of printing suitable to clueless 
#      windows escapees?
# BUG7 out of vitriol error, requestion resupply in suitable
#              amounts for this class of lunacy
#
# really, the only proper way to cope would be deinstallation of
# anything gnome,gtk,firefox,mozilla for this kind of idiocy.
