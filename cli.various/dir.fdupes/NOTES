----------------------------------------------------------------------------

Using fdupes to find and eliminate duplicates

fdupes  is  a nice and seemingly less 'heavy' contender for  duplicate
handling,  but  in  contrast  to e.g. freedups, it  cannot  by  itself
replace duplicates by symlinks; worse the output for linked clusters
is inconsistent. 

Work around for this:

there seems to be a bug in fdupes:
- for stuff with multiple hardlinks, we get one OR more entries without
  giving option -H. It was probably intended to the leader of one cluster
  and all the files for further clusters. What happens is that the clusters
  of a linkable group may be each and every one being incomplete, thus
  relinking files merely moves the provided files, quite possibly 
  leaving non-empty hardlink clusters behind; thus fdupes degenerates
  into a mere check for linkability, but we need to combine fdupes with
  fdupes -H to really use it.

  [ex. a 2 link and a 6 link cluster; report without H is one-from-6link,
   one-from-2link, one-from-6link!?!]
  
- (of course, this work around has the usual filenames-with-embedded-\n bug)

fdupes.expand     # extend output of fdupes -Snr by matching entry from fdupes -SnrH
fdupes.head       # print only first/last n entries
fdupes.size       # remove entries smaller than size
fdupes.sort.lex   # sort by first filename of entry
fdupes.sort.size  # sort by size of entry
fdupes.grepv      # remove matching entries

fdupes.relink     # apply relinking, insecure but somewhat safe, plain file only

so we have this process to cope:

export PATH=$PATH:/home/jakobi/bin
fdupes -Snr    $PWD              > fdupes0
fdupes -Snr -H $PWD              > fdupes0H
cat fdupes0 | fdupes.size | fdupes.expand fdupes0H > fdupes0HH
fdupes.relink < fdupes0HH; fdupes -Snr $PWD > fdupes0C



-----------------------------------------------------------------------------

# fdupes duplicate checking:
fdupes -nr .

# find-based duplicate checking:

to list clusters, consider this:
find . -xdev -printf "%08i %p\n" | sort  -n                                > l

to separate clusters, use 
perl -lpe '/(\d+)/ and $d=$1; print "" if $d!=$d0; $d0=$d'            < l  >ll

to remove singletons from above, use
perl -0777pe '$_="\n\n".$_; s/\n\n.+(?=\n\n)/\n\n/g; s/\n\n+/\n\n/g' < ll >lll

to strip multiple empty lines, use
perl -0777pe 's/\n\n\n+/\n\n/g'
grep -v ...
find | grep | cat0 | xargs0 rm # or the IFS trick / --eof / headache


