[*
   $ENV{__EMB_EXTRATITLE}="Android Scripts";
   $ENV{__EMB_EXTRAMETA}="scripts to decode or filter twlauncher, logcat, etc.";
   $ENV{__EMB_COUNT}++; 
   if (1==$ENV{__EMB_COUNT}) {
      Execute('base.epl');
   } else {
*]

<p>Some scripts for coping with Android.</p>

<H3>Commands</H3>

<p><a href="http://github.com/jakobi/script-archive/tree/master/android/">Git
    View of this section / Download</a></p>


<ul>
   <li><B>dir.scrap-bag-of-goodies</B>: a selection of copies of other people's scripts 
                                    and efforts to help out with android tasks as 
                                    found in my ~/bin directory.
   <p>
   <li><B>android.logcat</B> grabs logcat output via ssh and filters out some noise
   <li><B>android.twlauncher.decode</B> decodes the twlauncher database. Useful to
       match apk files with classes and topics if you keep your apps in topical directories 
       like networking, office, etc.
</ul>

<p>See also:</p>
<ul>
   <li><B>***TODO*WHEN*STABLE***: (make a tarball or similar of /s and TERMIDE environment available; place stuff like TOP outside the tarball as well/instead? binaries like strace?)</B>
   <p>
   <li><B>android.func</B> (dir.shell): shell functions, incl. ssh, scp, battery status
   <li><B>watch_delta</B> (cli.processes): a script to capture changes in command output. I use it with 
       arguments -netstatl -initial on the android to keep an eye on network connections.
       It basically runs netstat;sleep 1, optionally acquiring a wake_lock.
</ul>


[*}*][# MUST BE AT EOF! #]
