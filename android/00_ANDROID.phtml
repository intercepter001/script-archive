[*
   $ENV{__EMB_EXTRATITLE}="Android Files";
   $ENV{__EMB_EXTRAMETA}="scripts to decode or filter twlauncher, logcat, etc.";
   $ENV{__EMB_COUNT}++; 
   if (1==$ENV{__EMB_COUNT}) {
      Execute('base.epl');
   } else {
*]

<p>Some scripts and examples for coping with Android.</p>

<p>See also <a href="/android-section/">my articles and howto on android</a>. Topics include a unix-ish setup/chroot/X11/automation, organizing apps, security/privacy issues.

<H3>Files</H3>

<p><a href="http://github.com/jakobi/script-archive/tree/master/android/">Git
    View of this section / Download</a></p>


<ul>
   <li><B>android.logcat</B> grabs logcat output via ssh and filters out some noise
   <li><B>android.twlauncher.decode</B> decodes the twlauncher database. Useful to
       match apk files with classes and topics if you keep your apps in topical directories 
       like networking, office, etc. It's used as part of the <a href="/android-section/02_twlauncher.html">second android article</a>.
   <li><a href="http://github.com/jakobi/script-archive/raw/master/android/android-setup-example-files.tgz"><B>android-setup-example-files.tgz</B></a> 
       is a mothballed snapshot (current as of 20120216) of a working android gingerbread setup for chroot and shell use (incl. a small collection
       of static armel binaries), plus configuration and files used for remote backup and monitoring. It is intended to illustrate the
       <a href="/android-section/">android article series</a>. 
   <li><b>dir.android-chroot</b>: contains current versions for selected scripts from above tarball (chroot-related
        or to be used from inside the chroot described in the <a href="/android-section/01_setup.html">first article</a>).
   <li><b>dir.android-unix-userspace</b>: contains current versions for selected scripts from above tarball.
   <li><B>dir.scrap-bag-of-goodies</B>: a selection of copies of other people's scripts 
                                    and efforts to help out with android tasks as 
                                    found in my ~/bin directory.
</ul>

<p>See also:</p>
<ul>
   <li><B>android.func</B> (-&gt; dir.shell): shell functions for using android devices, incl. ssh, scp, battery status
   <li><B>watch_delta</B> (-&gt; cli.processes): a script to capture changes in command output. I use it with 
       arguments -netstatl -initial on the android to keep an eye on network connections.
       It basically runs the loop <i>netstat;sleep 1</i> (basically the unimplemented -c option in busybox), 
       augments the output and summarizes changes between netstat runs; optionally acquiring a wake_lock.
       It's not perfect as it may miss connections, but it still allows me to obtain an overview of 
       active connections. <i>Drop me a line if I break it again on android, as I mostly
       use it on proper Unix systems</i>.
</ul>


[*}*][# MUST BE AT EOF! #]
